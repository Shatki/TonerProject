# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-17 22:50
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contractor', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nickname', models.CharField(db_index=True, max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', message='только буквенноцифровые символы допустимы.')], verbose_name='имя пользователя в системе')),
                ('username', models.CharField(db_index=True, max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Zа-яА-Я]*$', message='допустимы только буквенные символы.')], verbose_name='логин входа в систему')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='электронная почта')),
                ('first_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='имя пользователя')),
                ('last_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='фамилия пользователя')),
                ('tagline', models.CharField(blank=True, max_length=140, null=True, verbose_name='статус')),
                ('photo', models.FilePathField(blank=True, default='defaultprofileimage.jpg', null=True, verbose_name='Аватар')),
                ('phone', models.CharField(max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='укажите правильный номер телефона', regex='^\\d{10}$')], verbose_name='сотовый телефон')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='последнее обновление')),
                ('contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_contractor', to='contractor.Contractor', verbose_name='организация')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'account',
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
    ]
