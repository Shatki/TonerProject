# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2016-04-01 22:25
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', message='Только буквенноцифровые символы допустимы.')])),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(blank=True, max_length=40)),
                ('last_name', models.CharField(blank=True, max_length=40)),
                ('tagline', models.CharField(blank=True, max_length=140)),
                ('user_photo', models.FileField(default='/profile/defaultprofileimage.jpg', upload_to='/profile/')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('company_boss_first_name', models.CharField(blank=True, max_length=40)),
                ('company_boss_second_name', models.CharField(blank=True, max_length=40)),
                ('company_boss_last_name', models.CharField(blank=True, max_length=40)),
                ('company_inn', models.CharField(db_index=True, max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('company_ogrn', models.CharField(db_index=True, max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('company_okpo', models.CharField(db_index=True, max_length=9, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('company_okato', models.CharField(db_index=True, max_length=11, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('company_address', models.CharField(max_length=100)),
                ('company_phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Укажите правильный номер телефона', regex='^\\d{10}$')])),
                ('user_bank_account', models.CharField(db_index=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name_plural': 'Пользователи',
                'verbose_name': 'Пользователь',
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('bank_address', models.CharField(max_length=100)),
                ('bank_account', models.CharField(db_index=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
                ('bank_bik', models.CharField(db_index=True, max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', message='Только цифровые символы допустимы.')])),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='user_bank',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.Bank'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
